geom_text(
aes(x = WDay, y = calendar.week, label = Day),
alpha = 1/3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 6
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
ggsave("./Plots/plot14_trend_netloss_calendar.png")
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 1),
axis.ticks = element_blank()
)
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 3),
axis.ticks = element_blank()
)
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 4),
axis.ticks = element_blank()
)
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 5),
axis.ticks = element_blank()
)
ggsave("./Plots/plot14_trend_netloss_calendar.png")
ggplot(daily.df) +
geom_tile(
aes(x = WDay, y = calendar.week, fill = `Net Loss`)
) +
geom_text(
aes(x = WDay, y = calendar.week, label = Day),
size = 3
) +
scale_fill_continuous(low = "white", high = "#ee5f50", labels = amtLab) +
scale_x_discrete(name = NULL, position = "top") +
scale_y_continuous(name = NULL, trans = reverse_trans()) +
facet_wrap(~ Month, scales = "free") +
# coord_fixed(ratio = 1) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
strip.placement = "outside",
axis.text.y = element_blank(),
axis.text.x = element_text(size = 6),
axis.ticks = element_blank()
)
ggsave("./Plots/plot14_trend_netloss_calendar.png")
?drive_auth
cache.path <- file.path(".", "Data")
stage.path <- file.path("~/Data", "oprisk-report")
source("./Scripts/template.R")
library(magrittr)
# Raw
CY2014.df <- file.path(cache.path, "CY2014.rds") %>% readRDS()
# Summary per biz ####
biz.path <- file.path(cache.path, "out00_total-netloss-per-biz-2014")
biz.df <- readRDS(paste0(biz.path, ".rds"))
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)
library(ggrepel)
biz2.ls <- lapply(
unique(biz.df$Business), # unique Business --- no dups
function(temp.biz){
temp.df <- biz.df %>% filter(Business == temp.biz)
# Supposedly contains only 1 row
blocks <- rep(temp.df$Severity, temp.df$Freq)
out.df <- tibble(Business = temp.biz, Avg.Event = blocks, block.id = 1:length(blocks))
return(out.df)
}
)
biz.df %<>% mutate(Severity = `Net Loss` / Freq)
biz2.ls <- lapply(
unique(biz.df$Business), # unique Business --- no dups
function(temp.biz){
temp.df <- biz.df %>% filter(Business == temp.biz)
# Supposedly contains only 1 row
blocks <- rep(temp.df$Severity, temp.df$Freq)
out.df <- tibble(Business = temp.biz, Avg.Event = blocks, block.id = 1:length(blocks))
return(out.df)
}
)
blocks.df <- do.call(bind_rows, biz2.ls)
View(blocks.df)
bizLab.df <- biz.df %>%
mutate(
loss.label = comma(`Net Loss`),
loss.vjust = `Net Loss` > 1e6
)
ggplot(bizLab.df) +
geom_bar(
aes(x = Business, y = `Net Loss`, fill = Business),
stat = "identity"
) +
geom_text(
aes(x = Business, y = `Net Loss`, label = loss.label, vjust = loss.vjust)
) +
scale_y_continuous(name = NULL, expand = c(0, 0)) +
scale_x_discrete(name = NULL) +
scale_fill_manual(values = biz.cols, guide = FALSE) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()
)
## Order pie sections
biz.names <- biz.df$Business[order(biz.df$`Net Loss`)] %>% as.character()
biz.df$Business %<>% factor(levels = rev(biz.names))
## dataseer palette
biz.cols <- dataseer.cols[1:length(biz.names)]
names(biz.cols) <- rev(biz.names)
biz.df %<>% mutate(Severity = `Net Loss` / Freq)
bar2.df <- biz.df %>%
select(Business, Freq, Severity) %>%
gather("measure", "value", -Business) %>%
# for labels
group_by(measure) %>%
mutate(
max.val = max(value),
textBelow = value > (0.75*max.val),
value.label = round(value) %>% comma()
) %>%
ungroup()
ggplot(bar2.df) +
geom_bar(
aes(x = Business, y = value, fill = Business),
stat = "identity"
) +
facet_wrap(~ measure, scales = "free_y") +
geom_text(
aes(x = Business, y = value, label = value.label, vjust = textBelow),
size = 3
) +
scale_y_continuous(name = NULL, expand = c(0, 0)) +
scale_x_discrete(name = NULL) +
scale_fill_manual(values = biz.cols, guide = FALSE) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks = element_blank()
)
ggsave("./Plots/plot07_compare_FREQvsSEV_bar.png")
ggplot(bar2.df) +
geom_bar(
aes(x = Business, y = value, fill = Business),
stat = "identity"
) +
facet_wrap(~ measure, scales = "free_y", ncol = 1) +
geom_text(
aes(x = Business, y = value, label = value.label, vjust = textBelow),
size = 3
) +
scale_y_continuous(name = NULL, expand = c(0, 0)) +
scale_x_discrete(name = NULL) +
scale_fill_manual(values = biz.cols, guide = FALSE) +
theme(
plot.background = element_blank(),
panel.background = element_blank(),
strip.background = element_rect(fill ="#787c84"),
strip.text = element_text(colour = "white"),
# axis.text = element_blank(),
# axis.ticks = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.ticks = element_blank()
)
ggsave("./Plots/plot07_compare_FREQvsSEV_bar.png", width = 5.79, units = "in")
ggsave("./Plots/plot07_compare_FREQvsSEV_bar.png", height = 8.28, width = 5.79, units = "in")
author.name <- "IBM Watson"
data.source <- "Banking Loss Events"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
stage.path <- file.path(data.path, "data")
raw.path <- file.path(data.path, "raw")
stage.path <- file.path(source.path, "data")
raw.path <- file.path(source.path, "raw")
library(googledrive)
drive_auth()
data.path <- file.path("~/Data", project.name)
project.name <- "oprisk-report"
data.path <- file.path("~/Data", project.name)
library(magrittr)
(dataset.files <- source.path %>% drive_ls())
rm(dataset.files)
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
(source.files <- source.path %>% drive_ls())
(proj.files <- data.path %>% drive_ls())
annual.path <- file.path(source.path, "case_Operational Loss Report_annual conso")
(annual.files <- annual.path %>% drive_ls())
get.files <- c("CY2014.xlsx", "CY2013.xlsx")
data.path
getwd()
local.path <- "./Data"
lapply(
get.files,
function(temp.file){
dataset.file <- annual.path %>%
file.path(get.files) %>% ## Select file for download
drive_get()
dataset.id <- as_id(dataset.file) ## Get ID for download
dataset.path <- file.path(local.path, dataset.file$name) # Assumes nrow = 1
drive_download(dataset.id, path = dataset.path, overwrite = TRUE) ## Download raw data file
}
)
temp.file <- get.file[1]
temp.file <- get.files[1]
# temp.file <- get.files[1]
dataset.file <- annual.path %>%
file.path(get.files) %>% ## Select file for download
drive_get()
dataset.file
rm(dataset.file)
rm(temp.file, dataset.file)
rm(temp.file)
lapply(
get.files,
function(temp.file){
# temp.file <- get.files[1]
dataset.file <- annual.path %>%
file.path(temp.files) %>% ## Select file for download
drive_get()
dataset.id <- as_id(dataset.file) ## Get ID for download
dataset.path <- file.path(local.path, dataset.file$name) # Assumes nrow = 1
drive_download(dataset.id, path = dataset.path, overwrite = TRUE) ## Download raw data file
}
)
lapply(
get.files,
function(temp.file){
# temp.file <- get.files[1]
dataset.file <- annual.path %>%
file.path(temp.file) %>% ## Select file for download
drive_get()
dataset.id <- as_id(dataset.file) ## Get ID for download
dataset.path <- file.path(local.path, dataset.file$name) # Assumes nrow = 1
drive_download(dataset.id, path = dataset.path, overwrite = TRUE) ## Download raw data file
}
)
project.name <- "oprisk-report"
## DataLake
author.name <- "IBM Watson"
data.source <- "Banking Loss Events"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
## Repo
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
#*******************************************************************#
get.files
CY2013.path <- file.path(local.path, get.files[2])
library(magrittr)
get.files <- c("CY2014.xlsx", "CY2013.xlsx")
CY2013.path <- file.path(local.path, get.files[2])
CY2013.path
CY2013.path <- file.path(local.path, "CY2013.xlsx")
# Initialise paths ##################################################
# Copy paste at beginning of every R script
# Edit as appropriate
project.name <- "oprisk-report"
## DataLake
author.name <- "IBM Watson"
data.source <- "Banking Loss Events"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
## Repo
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
#*******************************************************************#
CY2013.path <- file.path(local.path, "CY2013.xlsx")
library(readxl)
excel_sheets(CY2013.path) # Only 1 sheet
data.df <- read_excel(
CY2013.path,
col_types = c(
"text", # Region
"text", # Business
"text", # Name
"text", # Status
"text", # Risk Category
"text", # Risk Sub-Category
"date", # Discovery Date
"date", # Occurrence Start Date
"numeric", # Estimated Gross Loss
"numeric", # Recovery Amount
"numeric", # Net Loss
"numeric"  # Recovery Rate
)
)
data.df <- read_excel(
CY2013.path)
str(data.df)
data.df <- read_excel(
CY2013.path
data.df <- read_excel(
CY2013.path,
col_types = c(
"text", # Region
"text", # Business
"text", # Name
"text", # Status
"text", # Risk Category
"text", # Risk Sub-Category
"date", # Discovery Date
"date", # Occurrence Start Date
"numeric", # Estimated Gross Loss
"numeric", # Recovery Amount
"numeric", # Net Loss
"numeric"  # Recovery Rate
)
)
str(data.df)
data.df <- read_excel(CY2013.path)
str(data.df)
library(magrittr)
data.df %<>% mutate_at(vars(ends_with("Date")), funs(as.Date))
library(dplyr)
# Initialise paths ##################################################
# Copy paste at beginning of every R script
# Edit as appropriate
project.name <- "oprisk-report"
## DataLake
author.name <- "IBM Watson"
data.source <- "Banking Loss Events"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
## Repo
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
#*******************************************************************#
CY2013.path <- file.path(local.path, "CY2013.xlsx")
library(readxl)
excel_sheets(CY2013.path) # Only 1 sheet
data.df <- read_excel(CY2013.path)
excel_sheets(CY2013.path) # Only 1 sheet
project.name <- "oprisk-report"
author.name <- "IBM Watson"
data.source <- "Banking Loss Events"
## Path to data://
source.path <- file.path("~/Data/DataLake", author.name, data.source)
source.path <- file.path(source.path, "data")
library(googledrive)
drive_auth()
data.path <- file.path("~/Data", project.name)
local.path <- "./Data"
CY2013.path <- file.path(local.path, "CY2013.xlsx")
library(readxl)
excel_sheets(CY2013.path) # Only 1 sheet: Bankwide
data.df <- read_excel(CY2013.path, sheet = "Bankwide")
str(data.df)
rm(data.df)
events.df <- read_excel(CY2013.path, sheet = "Bankwide")
str(events.df)
